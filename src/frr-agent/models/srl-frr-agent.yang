module srl-frr-agent {

    yang-version "1";

    namespace "urn:srl_nokia/frr";

    prefix "srl_nokia-frr";

    import srl_nokia-common {
        prefix srl_nokia-comm;
    }
    import srl_nokia-network-instance {
        prefix srl_nokia-netinst;
    }
    import srl_nokia-interfaces {
        prefix srl_nokia-if;
    }
    import srl_nokia-if-ip {
        prefix srl_nokia-if-ip;
    }
    import srl_nokia-extensions {
        prefix srl_nokia-ext;
    }

    revision "2021-08-03" {
        description "Initial revision";
        reference "TBD";
    }

    typedef peer-as-spec {
      type union {
        type uint32 { range "1..4294967295"; }
        type enumeration { enum "external"; enum "internal"; }
      }
    }

    grouping frr-top {
        description "Configure FRR";

        container experimental-frr {
            presence "Configure FRR BGP";
            must "../../type != 'srl_nokia-netinst:mac-vrf'" {
              error-message "FRR configuration is not supported on network-instance of type mac-vrf";
            }
            // must "not(../bgp)" {
            //  error-message "Either BGP or FRR can be configured for a network-instance, not both";
            // }

            leaf admin-state {
                type srl_nokia-comm:admin-state;
                default "enable";

                description
                    "Administratively enable or disable the entire FRR BGP instance

                    Disable causes all BGP sessions to be taken down immediately, even if admin-state at the group or neighbor level of some of these sessions is still set as enable.";
            }
            container bgp {
              presence "Configure BGP";
              leaf admin-state {
                type srl_nokia-comm:admin-state;
                default "enable";

                description
                    "Administratively enable or disable the FRR BGP daemon";
              }

              leaf port {
                type uint16;
                default 1179;
                description "TCP port for FRR bgpd to listen on, default 1179 (non-standard)";
                must ". != 179 or not(../../../bgp)" {
                   error-message "If Nokia BGP is configured, FRR BGP cannot use TCP port 179 in the same network-instance";
                }
              }

              leaf preference {
                description "The default route table preference for all FRR BGP learned routes
                    BGP import policies can override this preference value on a route by route basis.";

                type uint8;
                default 170;
              }

              leaf route-import {
                description "Selects the route import mechanism";
                type enumeration {
                  enum ndk {
                    description "Use the SRL NDK to import ipv4/v6 routes from FRR";
                  }
                  enum linux {
                    description "Use the built-in 'linux' protocol to import routes";
                  }
                }
                default "linux";
              }
            }
            container eigrp {
              presence "Configure EIGRP";
              leaf admin-state {
                type srl_nokia-comm:admin-state;
                default "enable";

                description
                    "Administratively enable or disable the Enhanced Interior Gateway Routing Protocol (EIGRP) daemon";

                must ". = 'disable' or ../../autonomous-system < 65536" {
                   error-message "EIGRP only supports AS numbers between 1 and 65535";
                }
              }

              leaf create-veth-multicast-bypass {
                type boolean;
                default true;
                description "Enable multicast reception by creating a custom subinterface on e1-1";
              }
            }
            leaf autonomous-system {
                type uint32 {
                  range "1..4294967295";
                }
                mandatory "true";
                description
                    "The global AS number of the BGP instance

                    Values greater than 65535 must be entered in ASPLAIN format.";
            }

            //
            // Could add logic for this agent to subscribe to gNMI, waiting for
            // this config item. It could come from protocols/bgp/router-id
            // locally, or even from some remote config server
            //
            leaf router-id {
                //type srl_nokia-comm:dotted-quad;
                type srl_nokia-comm:ip-address;
                mandatory "true";
                description
                    "The BGP identifier used by this BGP instance in all of its OPEN messages

                    Any non-zero value is supported.";
            }

            container openfabric {
              presence "Configure OpenFabric";
              leaf name {
                type string;
                default "SRLinux";
                description "Fabric name (required, default 'SRLinux')";
              }
              leaf net {
                type string;
                default "auto";
                description "Network Entity Title (NET), e.g. '49.0000.0000.0001.00'
                             Default 'auto' uses 49.0001.<6-byte system MAC>.00";
              }
              leaf admin-state {
                type srl_nokia-comm:admin-state;
                default "enable";

                description
                    "Administratively enable or disable the FRR OpenFabric daemon";

                must ". = 'disable' or not(../../../isis)" {
                   error-message "Either Nokia ISIS or FRR OpenFabric can be configured for a network-instance, not both";
                }
              }
              leaf domain-password {
                type string;
                default "";
                description "Optional MD5 password string";
              }
              leaf fabric-tier {
                type uint8 {
                  range "0..14";
                }
                description "Optional statically configured fabric tier (0..14)";
              }
            }

            leaf oper-state {
                config false;
                type enumeration {
                    enum "up" {
                        description "Operational state of FRR BGP is up.";
                    }
                    enum "down" {
                        description "Operational state of FRR BGP is down.";
                    }
                }
            }
        }
    }

    augment "/srl_nokia-netinst:network-instance/srl_nokia-netinst:protocols" {
        uses frr-top;
    }

    augment "/srl_nokia-netinst:network-instance/srl_nokia-netinst:interface" { // list

      leaf bgp-unnumbered-peer-as {
          description "Initiate a BGP unnumbered peering session on this interface,
                       expecting the given peer AS: 'external' or 'internal' for auto-discovery
                       or a number between 1..4294967295";
          type peer-as-spec;

          must "../../srl_nokia-netinst:protocols/experimental-frr" {
            error-message "BGP unnumbered requires experimental-frr to be configured for this network-instance";
          }
          must "../type != 'srl_nokia-netinst:mac-vrf'" {
            error-message "BGP unnumbered is not supported on network-instance of type mac-vrf";
          }
          must "/srl_nokia-if:interface[srl_nokia-if:name=substring-before(../name, '.')]/srl_nokia-if:subinterface[srl_nokia-if:index=substring-after(../name, '.')]/srl_nokia-if:type != 'srl_nokia-if:bridged'" {
            error-message "BGP unnumbered interfaces cannot have type 'bridged'";
          }
          must "not(starts-with(../srl_nokia-if:name, 'mgmt') or starts-with(../srl_nokia-if:name, 'lo')
                or starts-with(../srl_nokia-if:name, 'system'))" {
            error-message "BGP unnumbered cannot be configured for this type of interface";
          }
          // For auto-discovery to work, both must be enabled
          //must "/srl_nokia-if:interface[srl_nokia-if:name=substring-before(../name, '.')]/srl_nokia-if:subinterface[srl_nokia-if:index=substring-after(../name, '.')]/srl_nokia-if-ip:ipv4" {
          //  error-message "BGP unnumbered interfaces must have ipv4 enabled";
          //}
          must "/srl_nokia-if:interface[srl_nokia-if:name=substring-before(../name, '.')]/srl_nokia-if:subinterface[srl_nokia-if:index=substring-after(../name, '.')]/srl_nokia-if-ip:ipv6" {
            error-message "BGP unnumbered interfaces must have ipv6 enabled";
          }
       }

       container openfabric {
         presence "Openfabric interface config";
         leaf activate {
           description "Activate OpenFabric for this interface";
           type boolean;
           default false;

           must ".=false() or ../../../srl_nokia-netinst:protocols/experimental-frr" {
             error-message "OpenFabric requires experimental-frr to be configured for this network-instance";
           }
         }
       }
    }

    // TODO extend network-instance/interface with flags to
    // 1. Establish BGP unnumbered peering
    // 2. Export the interface IP to peers (?) or simply all connected
}
